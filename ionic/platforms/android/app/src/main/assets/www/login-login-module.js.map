{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { FormsModule } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar  color=\\\"danger\\\">\\n    <ion-title>Login to Newz Adda</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content style=\\\"text-align:center\\\" class=\\\"ion-padding\\\" >\\n  <br>\\n  <br>\\n  <ion-button shape=\\\"round\\\" color=\\\"primary\\\" (click)=\\\"ss()\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"logo-google\\\"></ion-icon>\\n  Sign in with Google</ion-button><br><br>\\n  Or Login\\n\\n<form [formGroup]=\\\"formdata\\\" (ngSubmit)=\\\"login(formdata.value)\\\">\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Email:</ion-label>\\n    <ion-input required type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n  </ion-item>\\n  <br>\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Password:</ion-label>\\n    <ion-input required type=\\\"password\\\" formControlName=\\\"pwd\\\"></ion-input>\\n  </ion-item><br><br>\\n  By signing in, you agree to Terms & Conditions\\n\\n  <br><br>\\n  <!-- <ion-button  style=\\\"width:50%;\\\" color=\\\"danger\\\"  routerLink=\\\"/home\\\">Login</ion-button> -->\\n\\n  <ion-button type=\\\"submit\\\" style=\\\"width:50%;\\\" color=\\\"danger\\\" [disabled]=\\\"!formdata.valid\\\">Login</ion-button>\\n\\n</form>\\n\\n  <ion-row class=\\\"ion-align-items-end\\\" style=\\\"height:100px; padding:10px;\\\">\\n\\n    <ion-col>New User? <ion-text  color=\\\"danger\\\" [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"'/signup'\\\"> SIGNUP </ion-text>\\n    </ion-col>\\n    <ion-col>\\n      <ion-text  color=\\\"danger\\\" [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"'/forgotpwd'\\\"> FORGOT PASSWORD </ion-text>\\n    </ion-col>\\n  </ion-row>\\n\\n \\n\\n\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { S1Service } from '../s1.service';\nimport { FCM } from '@ionic-native/fcm/ngx';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { FormGroup, FormControl,Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private s1: S1Service, private fcm: FCM,private router: Router, private toastctr:ToastController) \n  { \n    localStorage.clear(); \n  }\n\n\n\nformdata = new FormGroup(\n  {\n    \n    email: new FormControl('',Validators.required),\n\n    pwd: new FormControl('',Validators.required)\n    \n  } \n  );\n\n  login(data)\n  {\n    this.fcm.getToken()\n    .then(token =>{\n      this.s1.login(data.email,data.pwd,token).subscribe((res)=>{\n        console.log(res);\n        localStorage.setItem(\"username\", data.email);\n        localStorage.setItem(\"token\", token);\n        console.log(\"stored in local storage\");\n        this.toastControl(1);\n        this.router.navigate(['/home']);\n      },\n\n      error => {\n        this.toastControl(0);\n      }\n\n\n      );\n      \n      console.log(token);\n    });\n  }\n\n  async toastControl(x) {\n    if(x){\n      const toast = await this.toastctr.create({\n        message: 'Login Successfully !!!',\n        duration: 2000\n      });\n      await toast.present();\n    }\n    else{\n      const toast = await this.toastctr.create({\n        message: 'Please enter valid email and password',\n        duration: 2000\n      });\n      await toast.present();\n    }\n  }\n\n  ss()\n  {\n    localStorage.clear();  \n  }\n  \n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}