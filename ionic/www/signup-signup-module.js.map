{"version":3,"sources":["webpack:///./src/app/signup/signup.module.ts","webpack:///./src/app/signup/signup.page.html","webpack:///./src/app/signup/signup.page.scss","webpack:///./src/app/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-signup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n  \\t<ion-buttons slot=\\\"start\\\" routerLink=\\\"/login\\\">\\n      <ion-icon name=\\\"arrow-round-back\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-title>Signup Page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content style=\\\"text-align:center\\\" class=\\\"ion-padding\\\" >\\n\\n\\n  <form [formGroup]=\\\"formdata\\\" (ngSubmit)=\\\"submit(formdata.value)\\\">\\n    <ion-item class=\\\"ion-padding-top\\\">\\n      <ion-label position=\\\"stacked\\\">Name:</ion-label>\\n      <ion-input formControlName=\\\"name\\\"></ion-input>\\n    </ion-item>\\n\\n\\n\\n<div>\\n  <ng-container *ngFor=\\\"let validation of validation_messages.name\\\" >\\n    <div class=\\\"error-message\\\" *ngIf=\\\"formdata.get('name').hasError(validation.type)\\n    && (formdata.get('name').dirty || formdata.get('name').touched)\\\">\\n    <p>{{validation.message}}</p>\\n  </div>\\n</ng-container>\\n</div>\\n\\n\\n\\n<ion-item>\\n  <ion-label position=\\\"stacked\\\">Gender:</ion-label>\\n  <!-- <ion-input  id=\\\"gender\\\" [(ngModel)]=\\\"gender\\\"></ion-input> -->\\n  <ion-select formControlName=\\\"gender\\\">\\n    <ion-select-option value=\\\"Female\\\">Female</ion-select-option>\\n    <ion-select-option value=\\\"Male\\\">Male</ion-select-option>\\n  </ion-select>\\n</ion-item>\\n\\n\\n<div>\\n  <ng-container *ngFor=\\\"let validation of validation_messages.gender\\\" >\\n    <div class=\\\"error-message\\\" *ngIf=\\\"formdata.get('gender').hasError(validation.type)\\n    && (formdata.get('gender').dirty || formdata.get('gender').touched)\\\">\\n    <p>{{validation.message}}</p>\\n  </div>\\n</ng-container>\\n</div>\\n\\n\\n<ion-item>\\n  <ion-label position=\\\"stacked\\\">Email:</ion-label>\\n  <ion-input id=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n</ion-item>\\n\\n\\n<div>\\n  <ng-container *ngFor=\\\"let validation of validation_messages.email\\\" >\\n    <div class=\\\"error-message\\\" *ngIf=\\\"\\n    formdata.get('email').hasError(validation.type) && (\\n    formdata.get('email').dirty || \\n    formdata.get('email').touched)\\\">\\n    <p>{{validation.message}}</p>\\n  </div>\\n</ng-container>\\n</div>\\n\\n\\n\\n<div formGroupName=\\\"matching_passwords\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"pwd\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.pwd\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"formdata.get('matching_passwords').get('pwd').hasError(validation.type) && (formdata.get('matching_passwords').get('pwd').dirty || formdata.get('matching_passwords').get('pwd').touched)\\\">\\n           {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Confirm Password</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"confirm\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.confirm\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"formdata.get('matching_passwords').get('confirm').hasError(validation.type) && (formdata.get('matching_passwords').get('confirm').dirty || formdata.get('matching_passwords').get('confirm').touched)\\\">\\n         {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <!-- These validations are for the form group -->\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.matching_passwords\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"\\n        formdata.get('matching_passwords').hasError(validation.type) && (formdata.get('matching_passwords').get('confirm').dirty || formdata.get('matching_passwords').get('confirm').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n\\n\\n\\n<ion-item>\\n  <ion-label position=\\\"stacked\\\">Security Question:</ion-label>\\n  <ion-select formControlName=\\\"ques\\\">\\n    <ion-select-option value=\\\"city\\\">In what city were you born?</ion-select-option>\\n    <ion-select-option value=\\\"school\\\">What is the name of your first school?</ion-select-option>\\n    <ion-select-option value=\\\"movie\\\">What is your favorite movie?</ion-select-option>\\n    <ion-select-option value=\\\"color\\\">What is your favorite color?</ion-select-option>\\n  </ion-select>\\n</ion-item>\\n<div>\\n  <ng-container *ngFor=\\\"let validation of validation_messages.ques\\\" >\\n    <div class=\\\"error-message\\\" *ngIf=\\\"formdata.get('ques').hasError(validation.type)\\n    && (formdata.get('ques').dirty || formdata.get('ques').touched)\\\">\\n    <p>{{validation.message}}</p>\\n  </div>\\n</ng-container>\\n</div>\\n\\n\\n<ion-item>\\n    <ion-label position=\\\"stacked\\\">Answer:</ion-label>\\n<ion-input formControlName=\\\"ans\\\" id=\\\"security\\\" type=\\\"text\\\"></ion-input>\\n</ion-item>\\n\\n<div>\\n  <ng-container *ngFor=\\\"let validation of validation_messages.ans\\\" >\\n    <div class=\\\"error-message\\\" *ngIf=\\\"formdata.get('ans').hasError(validation.type)\\n    && (formdata.get('ans').dirty || formdata.get('ans').touched)\\\">\\n    <p>{{validation.message}}</p>\\n  </div>\\n</ng-container>\\n</div>\\n\\n\\n<br><br>\\n\\n\\n\\n<ion-row class=\\\"ion-align-items-end\\\" style=\\\" padding:10px;\\\">\\n\\t<ion-col  class=\\\"ion-text-center\\\"  >\\n  By signing in, you agree to Terms & Condition </ion-col>\\n</ion-row>\\n\\n<!-- <ion-button style=\\\"width:50%;\\\" color=\\\"danger\\\" routerLink=\\\"/login\\\">Continue</ion-button> -->\\n<ion-button type=\\\"submit\\\" style=\\\"width:50%;\\\" color=\\\"danger\\\" [disabled]=\\\"!formdata.valid\\\">Continue</ion-button>\\n\\n</form>\\n</ion-content>\\n\"","module.exports = \"ion-icon {\\n  font-size: 30px; }\\n\\n.error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL0Q6XFxjZGFjXFxuZXdzIGFwcFxcaW9uaWNcXG5ld3NhcHAvc3JjXFxhcHBcXHNpZ251cFxcc2lnbnVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVBLGVBQ0EsRUFBQTs7QUFFQTtFQUVFLFVBQVU7RUFDVixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2lnbnVwL3NpZ251cC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taWNvblxyXG57XHJcbmZvbnQtc2l6ZTogMzBweFxyXG59XHJcblxyXG4uZXJyb3ItbWVzc2FnZVxyXG57XHJcbiAgY29sb3I6IHJlZDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { S1Service } from '../s1.service';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { FCM } from '@ionic-native/fcm/ngx';\nimport { FormGroup, FormControl,Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-signup',\n\ttemplateUrl: './signup.page.html',\n\tstyleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n\n\tconstructor(private s1: S1Service,private router: Router,\tprivate fcm: FCM,\n\t\tprivate toastctr:ToastController) { }\n\n\n\tmatching_passwords_group = new FormGroup({\n\t\tpwd: new FormControl('', Validators.compose([\n\t\t\tValidators.minLength(4),\n\t\t\tValidators.required,\n\t\t\t// Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n\t\t\t])\n\t\t),\n\n\t\tconfirm: new FormControl('', Validators.required)\n\t}, \n\t(formGroup: FormGroup) => {\n\t\treturn this.areEqual(formGroup);\n\t});\n\n\tareEqual(formGroup: FormGroup) {\n\t\tlet pass = formGroup.get('pwd').value;\n\t\tlet confirmPass = formGroup.get('confirm').value;\n\t\treturn pass == confirmPass ? null : { areEqual: true }   \n\t}\n\n\tformdata = new FormGroup(\n\t{\n\n\t\tname: new FormControl('', \n\t\t\tValidators.compose([\n\t\t\t\tValidators.pattern('[a-zA-Z ]*'), \n\t\t\t\tValidators.required\n\t\t\t\t])\n\t\t\t),\n\n\t\tgender: new FormControl('',Validators.required),\n\n\t\temail: new FormControl(\"\",\n\t\t\tValidators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\t// Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n\t\t\t\tValidators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})')\n\t\t\t\t\n\t\t\t\t])\n\t\t\t),\n\n\t\tmatching_passwords: this.matching_passwords_group,\n\t\tques: new FormControl('',Validators.required),\n\t\tans: new FormControl('',Validators.required)\n\t} \n\t);\n\n\tvalidation_messages = {\n\t\t'name': [\n\t\t{ type: 'required', message: 'Name is required.' },\n\t\t{ type: 'pattern', message: 'Your name must contain only letters.' }\n\n\t\t],\n\n\t\t'gender': [\n\t\t{ type: 'required', message: 'Gender is required.' }\n\t\t],\n\n\t\t'email': [\n\t\t{ type: 'required', message: 'Email is required.' },\n\t\t{ type: 'pattern', message: 'Please enter a valid email' }\n\t\t],\n\n\t\t'pwd': [\n\t\t{ type: 'required', message: 'Password is required.' },\n\t\t{ type: 'minlength', message: 'Password must be at least 4 characters long.' },\n\t\t// { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, and one number.' }\n\t\t],\n\n\t\t'confirm':[\n\t\t{ type: 'required', message: 'Confirm Password is required.' }\n\t\t],\n\n\t\t'matching_passwords': [\n\t\t{ type: 'areEqual', message: 'Password mismatch.' }\n\t\t],\n\n\t\t'ques': [\n\t\t{ type: 'required', message: 'Select a Security Question.' }\n\t\t],\n\n\t\t'ans': [\n\t\t{ type: 'required', message: 'Answer is required.' }\n\t\t]\n\n\t}\n\tsubmit(data){\n\t\tconsole.log(data);\n\t\tconsole.log(data.matching_passwords.pwd);\n\t\tthis.fcm.getToken()\n\t\t.then(token =>{\n\t\t\tthis.s1.signup(data.name,data.gender,data.email,data.matching_passwords.pwd,data.ques,\n\t\t\t\tdata.ans,token)\n\t\t\t.subscribe((res)=>{\n\t\t\t\tlocalStorage.setItem(\"username\", data.email);\n\t\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t\t\tconsole.log(\"stored in local storage\");\n\t\t\t\tthis.router.navigate(['/home']);\n\t\t\t\tthis.toastControl(1);\n\t\t\t\tconsole.log(res);\n\t\t\t},\n\n      error => {\n        this.toastControl(0);\n      });\n\t\t\t// console.log(res.name);\n\t\t});\n\n\t}\n\n\n\tasync toastControl(x) {\n\nif(x){\n\t\tconst toast = await this.toastctr.create({\n\t\t\tmessage: 'Signed up Successfully!!!',\n\t\t\tduration: 2000\n\t\t});\n\t\tawait toast.present();\n\n}\nelse\n{\n\tconst toast = await this.toastctr.create({\n\t\t\tmessage: 'Email already exists!!!',\n\t\t\tduration: 2000\n\t\t});\n\t\tawait toast.present();\n\n}\n\t}\n\n\tngOnInit() {\n\n\n\n\t}\n\n}\n"],"sourceRoot":""}